/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { IsString, IsDate, IsOptional, ValidateNested } from "class-validator";
import { ApiProperty } from "@nestjs/swagger";
import { Type } from "class-transformer";
import { Order } from "../../order/base/Order";
import { Address } from "../../address/base/Address";
@ObjectType()
class Customer {
  @IsString()
  @Field(() => String)
  @ApiProperty({
    required: true,
    type: String,
  })
  id!: string;

  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  @ApiProperty({
    required: true,
  })
  createdAt!: Date;

  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  @ApiProperty({
    required: true,
  })
  updatedAt!: Date;

  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  @ApiProperty({
    required: false,
    type: String,
  })
  firstName!: string | null;

  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  @ApiProperty({
    required: false,
    type: String,
  })
  lastName!: string | null;

  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  @ApiProperty({
    required: false,
    type: String,
  })
  email!: string | null;

  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  @ApiProperty({
    required: false,
    type: String,
  })
  phone!: string | null;

  @ValidateNested()
  @Type(() => Order)
  @IsOptional()
  @ApiProperty({
    required: false,
    type: () => [Order],
  })
  orders?: Array<Order>;

  @ValidateNested()
  @Type(() => Address)
  @IsOptional()
  @ApiProperty({
    required: false,
    type: () => Address,
  })
  address?: Address | null;
}
export { Customer };
